name: Build Docker

on:
  workflow_dispatch: 
  schedule:
    - cron: "0 0 * * *"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        run: |

          tags=`curl -s "https://api.github.com/repos/grafana/grafana/tags" | jq -r '.[].name'`
          latestUpstreamTag=""
          for t in $tags
          do
              if [[ $t =~ ^v[0-9\.]+$ ]]
              then
                  latestUpstreamTag=$t
                  break
              fi
          done

          token=`curl -s https://ghcr.io/token\?scope\="repository:ferama/grafana:pull" | jq -r .token`
          latestTag=`curl -s -H "Authorization: Bearer ${token}" https://ghcr.io/v2/ferama/grafana/tags/list | jq -r .tags[0]`

          echo "Upstream tag is $latestUpstreamTag"
          echo "Local tag is $latestTag"
          if [[ $latestUpstreamTag != $latestTag ]]
          then
            git clone --depth 1 --branch $latestUpstreamTag https://github.com/grafana/grafana.git
            echo "GRAFANA_TAG=$latestUpstreamTag" >> $GITHUB_OUTPUT
          fi

        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{ steps.checkout.outputs.GRAFANA_TAG != '' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ steps.checkout.outputs.GRAFANA_TAG != '' }}

      - name: Login to Docker registry
        uses: docker/login-action@v3
        if: ${{ steps.checkout.outputs.GRAFANA_TAG != '' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        if: ${{ steps.checkout.outputs.GRAFANA_TAG != '' }}
        with:
          context: ./grafana
          file: ./grafana/Dockerfile
          platforms: linux/amd64,linux/arm/v7 
          build-args: BINGO="false"
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.checkout.outputs.GRAFANA_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
